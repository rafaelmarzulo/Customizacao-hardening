#!/bin/bash
# fix-sftp-hardening.sh - Garante funcionamento do SFTP ap√≥s hardening SSH
# Autor: Manus AI Assistant
# Vers√£o: 1.0
# Data: 2025-07-15
# Descri√ß√£o: Corrige configura√ß√£o SSH para manter SFTP funcional ap√≥s hardening

set -euo pipefail

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Fun√ß√µes de log
info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }
header() { echo -e "${PURPLE}üîß $1${NC}"; }
debug() { echo -e "${CYAN}üîß DEBUG: $1${NC}"; }

echo -e "${PURPLE}üîß FIX: SFTP ap√≥s Hardening SSH${NC}"
echo "================================="
echo ""

# Verificar se √© executado como root
if [ "$EUID" -ne 0 ]; then
    error "Execute como root: sudo $0"
    exit 1
fi

# Vari√°veis
SSHD_CONFIG="/etc/ssh/sshd_config"
SSHD_CONFIG_TEMPLATE="/etc/customizacao-hardening/configs/ssh/sshd_config.template"
BACKUP_DIR="/var/backups/customizacao-hardening"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)

# Poss√≠veis caminhos do sftp-server
SFTP_PATHS=(
    "/usr/lib/openssh/sftp-server"
    "/usr/libexec/openssh/sftp-server"
    "/usr/lib/ssh/sftp-server"
    "/usr/sbin/sftp-server"
)

# ============================================================================
# FUN√á√ïES AUXILIARES
# ============================================================================

# Fun√ß√£o para encontrar o caminho correto do sftp-server
find_sftp_server() {
    local sftp_path=""
    
    for path in "${SFTP_PATHS[@]}"; do
        if [ -f "$path" ]; then
            sftp_path="$path"
            break
        fi
    done
    
    if [ -z "$sftp_path" ]; then
        # Tentar encontrar com find
        sftp_path=$(find /usr -name "sftp-server" -type f 2>/dev/null | head -1)
    fi
    
    echo "$sftp_path"
}

# Fun√ß√£o para fazer backup
backup_file() {
    local file="$1"
    local backup_name="$(basename "$file").backup.$TIMESTAMP"
    
    if [ -f "$file" ]; then
        mkdir -p "$BACKUP_DIR"
        cp "$file" "$BACKUP_DIR/$backup_name"
        success "Backup criado: $BACKUP_DIR/$backup_name"
        return 0
    else
        warning "Arquivo n√£o encontrado para backup: $file"
        return 1
    fi
}

# Fun√ß√£o para verificar se SFTP est√° configurado
check_sftp_config() {
    local config_file="$1"
    
    if grep -q "^Subsystem.*sftp" "$config_file"; then
        return 0  # SFTP configurado
    else
        return 1  # SFTP n√£o configurado
    fi
}

# Fun√ß√£o para testar SFTP
test_sftp() {
    local test_user="${1:-ubuntu}"
    
    info "Testando funcionamento do SFTP..."
    
    # Verificar se o servi√ßo SSH est√° ativo
    if ! systemctl is-active ssh >/dev/null 2>&1; then
        warning "Servi√ßo SSH n√£o est√° ativo"
        return 1
    fi
    
    # Testar conex√£o SFTP local (se poss√≠vel)
    if command -v sftp >/dev/null 2>&1; then
        # Criar teste b√°sico
        local test_result
        timeout 5 sftp -o BatchMode=yes -o ConnectTimeout=3 "$test_user@localhost" <<< "quit" >/dev/null 2>&1
        test_result=$?
        
        if [ $test_result -eq 0 ]; then
            success "SFTP funcionando corretamente"
            return 0
        else
            warning "SFTP pode ter problemas de conectividade"
            return 1
        fi
    else
        info "Cliente SFTP n√£o dispon√≠vel para teste"
        return 0
    fi
}

# ============================================================================
# EXECU√á√ÉO PRINCIPAL
# ============================================================================

header "INICIANDO CORRE√á√ÉO DO SFTP"
echo ""

# ETAPA 1: Verifica√ß√µes iniciais
info "Verificando arquivos de configura√ß√£o..."

if [ ! -f "$SSHD_CONFIG" ]; then
    error "Arquivo sshd_config n√£o encontrado: $SSHD_CONFIG"
    exit 1
fi

success "Arquivo sshd_config encontrado"

# ETAPA 2: Encontrar caminho do sftp-server
info "Localizando sftp-server..."

SFTP_SERVER_PATH=$(find_sftp_server)

if [ -z "$SFTP_SERVER_PATH" ]; then
    error "sftp-server n√£o encontrado no sistema"
    error "Instale o openssh-server: apt install openssh-server"
    exit 1
fi

success "sftp-server encontrado: $SFTP_SERVER_PATH"

# ETAPA 3: Verificar configura√ß√£o atual
info "Verificando configura√ß√£o atual do SFTP..."

if check_sftp_config "$SSHD_CONFIG"; then
    # Verificar se o caminho est√° correto
    current_sftp_line=$(grep "^Subsystem.*sftp" "$SSHD_CONFIG")
    current_path=$(echo "$current_sftp_line" | awk '{print $3}')
    
    if [ "$current_path" = "$SFTP_SERVER_PATH" ]; then
        success "SFTP j√° configurado corretamente: $current_path"
        
        # Testar funcionamento
        if test_sftp; then
            success "üéâ SFTP funcionando perfeitamente!"
            echo ""
            info "Nenhuma corre√ß√£o necess√°ria"
            exit 0
        else
            warning "SFTP configurado mas com problemas"
        fi
    else
        warning "SFTP configurado com caminho incorreto: $current_path"
        warning "Caminho correto deveria ser: $SFTP_SERVER_PATH"
    fi
else
    warning "SFTP n√£o configurado no sshd_config"
fi

# ETAPA 4: Fazer backup
info "Fazendo backup do sshd_config..."
backup_file "$SSHD_CONFIG"

# ETAPA 5: Corrigir configura√ß√£o
header "APLICANDO CORRE√á√ÉO DO SFTP"

info "Removendo configura√ß√µes SFTP antigas (se existirem)..."
sed -i '/^Subsystem.*sftp/d' "$SSHD_CONFIG"

info "Adicionando configura√ß√£o SFTP correta..."
echo "" >> "$SSHD_CONFIG"
echo "# Habilita o subsistema SFTP para transfer√™ncia segura de arquivos" >> "$SSHD_CONFIG"
echo "Subsystem sftp $SFTP_SERVER_PATH" >> "$SSHD_CONFIG"

success "Configura√ß√£o SFTP adicionada"

# ETAPA 6: Atualizar template (se existir)
if [ -f "$SSHD_CONFIG_TEMPLATE" ]; then
    info "Atualizando template SSH..."
    
    # Fazer backup do template
    backup_file "$SSHD_CONFIG_TEMPLATE"
    
    # Remover linha antiga do template
    sed -i '/^Subsystem.*sftp/d' "$SSHD_CONFIG_TEMPLATE"
    
    # Adicionar linha correta ao template
    echo "" >> "$SSHD_CONFIG_TEMPLATE"
    echo "# Habilita o subsistema SFTP para transfer√™ncia segura de arquivos" >> "$SSHD_CONFIG_TEMPLATE"
    echo "Subsystem sftp $SFTP_SERVER_PATH" >> "$SSHD_CONFIG_TEMPLATE"
    
    success "Template SSH atualizado"
else
    info "Template SSH n√£o encontrado (normal se n√£o usando sistema customizado)"
fi

# ETAPA 7: Validar configura√ß√£o
info "Validando configura√ß√£o SSH..."

if sshd -t 2>/dev/null; then
    success "Configura√ß√£o SSH v√°lida"
else
    error "Configura√ß√£o SSH inv√°lida!"
    error "Restaurando backup..."
    
    # Restaurar backup
    latest_backup=$(ls -t "$BACKUP_DIR"/sshd_config.backup.* 2>/dev/null | head -1)
    if [ -n "$latest_backup" ]; then
        cp "$latest_backup" "$SSHD_CONFIG"
        warning "Backup restaurado: $latest_backup"
    fi
    
    exit 1
fi

# ETAPA 8: Reiniciar SSH
info "Reiniciando servi√ßo SSH..."

if systemctl restart ssh; then
    success "Servi√ßo SSH reiniciado"
    
    # Aguardar um momento para o servi√ßo inicializar
    sleep 2
    
    if systemctl is-active ssh >/dev/null 2>&1; then
        success "Servi√ßo SSH ativo"
    else
        error "Servi√ßo SSH falhou ao iniciar"
        exit 1
    fi
else
    error "Falha ao reiniciar SSH"
    exit 1
fi

# ETAPA 9: Teste final
header "TESTE FINAL DO SFTP"

info "Aguardando estabiliza√ß√£o do servi√ßo..."
sleep 3

if test_sftp; then
    success "‚úÖ SFTP funcionando corretamente!"
else
    warning "SFTP pode ter problemas - verifique manualmente"
fi

# ETAPA 10: Verifica√ß√µes adicionais
info "Verifica√ß√µes adicionais..."

# Verificar porta SSH
ssh_port=$(grep "^Port" "$SSHD_CONFIG" | awk '{print $2}' || echo "22")
info "SSH rodando na porta: $ssh_port"

# Verificar usu√°rios permitidos
allowed_users=$(grep "^AllowUsers" "$SSHD_CONFIG" | cut -d' ' -f2- || echo "todos")
info "Usu√°rios permitidos: $allowed_users"

# Mostrar configura√ß√£o SFTP atual
current_sftp=$(grep "^Subsystem.*sftp" "$SSHD_CONFIG")
info "Configura√ß√£o SFTP: $current_sftp"

# ============================================================================
# RESULTADO FINAL
# ============================================================================

echo ""
header "üéâ CORRE√á√ÉO DO SFTP CONCLU√çDA!"
echo ""

success "‚úÖ SFTP configurado corretamente"
success "‚úÖ Caminho do sftp-server: $SFTP_SERVER_PATH"
success "‚úÖ Configura√ß√£o SSH validada"
success "‚úÖ Servi√ßo SSH reiniciado"
success "‚úÖ Template atualizado (se aplic√°vel)"

echo ""
info "üìã RESUMO DA CORRE√á√ÉO:"
echo "  ‚Ä¢ Backup criado em: $BACKUP_DIR"
echo "  ‚Ä¢ SFTP habilitado com: $SFTP_SERVER_PATH"
echo "  ‚Ä¢ SSH rodando na porta: $ssh_port"
echo "  ‚Ä¢ Configura√ß√£o validada e aplicada"

echo ""
info "üß™ COMO TESTAR O SFTP:"
echo "  ‚Ä¢ Teste local: sftp usuario@localhost"
echo "  ‚Ä¢ Teste remoto: sftp usuario@ip_do_servidor"
echo "  ‚Ä¢ Verificar logs: tail -f /var/log/auth.log"

echo ""
success "üèÜ SFTP funcionando ap√≥s hardening SSH!"

# Mostrar status final
echo ""
info "üìä STATUS FINAL:"
systemctl status ssh --no-pager -l | head -10

echo ""
success "üîí Sistema seguro com SFTP funcional!"

